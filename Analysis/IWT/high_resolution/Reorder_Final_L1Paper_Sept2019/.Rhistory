girlGrowthSm <- with(growth, smooth.basisPar(argvals=age, y=hgtf, lambda=0.1))
plot(girlGrowthSm$fd, xlab="age", ylab="height (cm)",
main="Girls in Berkeley Growth Study" )
plot(deriv(girlGrowthSm$fd), xlab="age", ylab="growth rate (cm / year)",
main="Girls in Berkeley Growth Study" )
plot(deriv(girlGrowthSm$fd, 2), xlab="age",
ylab="growth acceleration (cm / year^2)",
main="Girls in Berkeley Growth Study" )
bspl1.2 <- create.bspline.basis(norder=1, breaks=c(0,.5, 1))
plot(bspl1.2)
# 2 bases, order 1 = degree 0 = step functions:
# (1) constant 1 between 0 and 0.5 and 0 otherwise
# (2) constant 1 between 0.5 and 1 and 0 otherwise.
fd1.2 <- Data2fd(0:1, basisobj=bspl1.2)
op <- par(mfrow=c(2,1))
plot(bspl1.2, main='bases')
plot(fd1.2, main='fit')
par(op)
# A step function:  0 to time=0.5, then 1 after
index(nondurables)
?index
??index
sessionInfo()
detach(package:fda)
#?fda
#detach(package:IWTomics)
require(devtools)
#?fda
#detach(package:IWTomics)
install.packages('devtools')
require(devtools)
#?fda
#detach(package:IWTomics)
#install.packages('devtools')
#require(devtools)
install_version('fda', version = "2.2.6", repos = "http://cran.us.r-project.org")
library(fda)
#?fda
detach(package:IWTomics)
#?fda
detach(package:IWTomics)
#?fda
detach(package:IWTomics)
#?fda
detach(package:IWTomic)
session_info()
uninstall.packages('IWTomics')
uninstall('IWTomics')
IWTomics
(31.49+28.79)/4
(31.49+28.79_25.2)/4
(31.49+28.79+25.2)/4
(31.49+28.79+25.2)/4
2519
2519-503.99-165.88-99.9-8.47
1740.76-995
q
q()
install.packages("seqinr")
# install.packages("seqinr")
library(seqinr)
94574/108778
scale()
list_of_corCoef<-c(0.5,0.3,-0.4,-0.2)
rescale(list_of_corCoef,from=range(-1,1),to=range(1,200))
stepAIC
stemAIC()
# load libraries
library(MASS)
stemAIC()
stepAIC()
68/120
28+28+29
colnames()
nrow()
load("/Users/Bruce/Google_Drive/L1/different_flanking_overlap/L1HS_flanking.RData")
View(datasets)
View(regionsFeatures)
head(regionsFeatures@metadata[["region_datasets"]][["file"]])
load("/Users/Bruce/Google_Drive/L1/IWTomics analysis/LowRes/L1_low_resolution_autosomes.RData")
setwd("/Users/Bruce/Google_Drive/L1/IWTomics analysis/LowRes/")
idFeatures_select=c("Dis_Telo","Dis_Cent","Rep_Timing","Average_Recom_Rate","Telomere_Hexamer")
regionsFeatures=regionsFeatures[,idFeatures_select]
regionsFeatures@features=lapply(regionsFeatures@features,function(feat) lapply(feat,function(fe) t(fe)))
boxplot(features(regionsFeatures)[[idFeature]],outline=FALSE,range=0.0000001,
col=c('red','green','gray'),names=nameRegions(regionsFeatures),main=nameFeatures(regionsFeatures)[idFeature])
for(idFeature in idFeatures(regionsFeatures)){
means=unlist(lapply(features(regionsFeatures)[[idFeature]],mean,na.rm=TRUE))
boxplot(features(regionsFeatures)[[idFeature]],outline=FALSE,range=0.0000001,
col=c('red','green','gray'),names=nameRegions(regionsFeatures),main=nameFeatures(regionsFeatures)[idFeature])
points(c(1,2,4),means)
}
idFeatures(regionsFeatures)
regionsFeatures@features
nameRegions(regionsFeatures)
features(regionsFeatures)[[idFeature]]
for(idFeature in idFeatures(regionsFeatures)){
means=unlist(lapply(features(regionsFeatures)[[idFeature]],mean,na.rm=TRUE))
boxplot(features(regionsFeatures)[[idFeature]],outline=FALSE,range=0.0000001,
col=c('red','green','gray'),names=nameRegions(regionsFeatures),main=nameFeatures(regionsFeatures)[idFeature])
points(1:3,means)
}
regionsFeatures@regions
regionsFeatures@metadata$region_datasets$file
regionsFeatures@metadata$region_datasets$name
regionsFeatures@metadata$region_datasets$name[1]
regionsFeatures@metadata$region_datasets$name[c(1,3,4)]
# Low resolution plots without L1Pol
regionsFeatures@metadata$region_datasets$name <- regionsFeatures@metadata$region_datasets$name[c(1,3,4)]
for(idFeature in idFeatures(regionsFeatures)){
means=unlist(lapply(features(regionsFeatures)[[idFeature]],mean,na.rm=TRUE))
boxplot(features(regionsFeatures)[[idFeature]][c(1,3,4)],outline=FALSE,range=0.0000001,
col=c('red','green','gray'),names=nameRegions(regionsFeatures),main=nameFeatures(regionsFeatures)[idFeature])
points(1:3,means)
}
dim(features(regionsFeatures)[[idFeature]])
dim(features(regionsFeatures))
for(idFeature in idFeatures(regionsFeatures[c(1,3,4)])){
means=unlist(lapply(features(regionsFeatures)[[idFeature]],mean,na.rm=TRUE))
boxplot(features(regionsFeatures)[[idFeature]],outline=FALSE,range=0.0000001,
col=c('red','green','gray'),names=nameRegions(regionsFeatures),main=nameFeatures(regionsFeatures)[idFeature])
points(1:3,means)
}
for(idFeature in idFeatures(regionsFeatures@regions[c(1,3,4)])){
means=unlist(lapply(features(regionsFeatures)[[idFeature]],mean,na.rm=TRUE))
boxplot(features(regionsFeatures)[[idFeature]],outline=FALSE,range=0.0000001,
col=c('red','green','gray'),names=nameRegions(regionsFeatures),main=nameFeatures(regionsFeatures)[idFeature])
points(1:3,means)
}
for(idFeature in idFeatures(regionsFeatures@regions[c(1,3,4)])){
means=unlist(lapply(features(regionsFeatures)[[idFeature]],mean,na.rm=TRUE))
boxplot(features(regionsFeatures)[[idFeature]],outline=FALSE,range=0.0000001,
col=c('red','green','gray'),names=nameRegions(regionsFeatures),main=nameFeatures(regionsFeatures)[idFeature])
points(1:3,means)
}
regionsFeatures
regionsFeatures@metadata$region_datasets$name[c(1,3,4)]
regionsFeatures@metadata$region_datasets$name <- regionsFeatures@regions[[c(1,3,4)]]
regionsFeatures@regions <- regionsFeatures@regions[[c(1,3,4)]]
pdf('boxplot_low_resolution_noPol.pdf',width=10,height=7)
regionsFeatures@regions <- regionsFeatures@regions[[1]]
regionsFeatures
regionsFeatures[1,]
idFeatures_select=c("Dis_Telo","Dis_Cent","Rep_Timing","Average_Recom_Rate","Telomere_Hexamer")
regionsFeatures=regionsFeatures[c(1,2,4),idFeatures_select]
regionsFeatures@features=lapply(regionsFeatures@features,function(feat) lapply(feat,function(fe) t(fe)))
for(idFeature in idFeatures(regionsFeatures])){
means=unlist(lapply(features(regionsFeatures)[[idFeature]],mean,na.rm=TRUE))
boxplot(features(regionsFeatures)[[idFeature]],outline=FALSE,range=0.0000001,
col=c('red','green','gray'),names=nameRegions(regionsFeatures),main=nameFeatures(regionsFeatures)[idFeature])
points(1:3,means)
}
for(idFeature in idFeatures(regionsFeatures])){
means=unlist(lapply(features(regionsFeatures)[[idFeature]],mean,na.rm=TRUE))
boxplot(features(regionsFeatures)[[idFeature]],outline=FALSE,range=0.0000001,
col=c('red','green','gray'),names=nameRegions(regionsFeatures),main=nameFeatures(regionsFeatures)[idFeature])
points(1:3,means)
}
for(idFeature in idFeatures(regionsFeatures])){
means=unlist(lapply(features(regionsFeatures)[[idFeature]],mean,na.rm=TRUE))
boxplot(features(regionsFeatures)[[idFeature]],outline=FALSE,range=0.0000001,
col=c('red','green','gray'),names=nameRegions(regionsFeatures),main=nameFeatures(regionsFeatures)[idFeature])
points(1:3,means)
}
for(idFeature in idFeatures(regionsFeatures)){
means=unlist(lapply(features(regionsFeatures)[[idFeature]],mean,na.rm=TRUE))
boxplot(features(regionsFeatures)[[idFeature]],outline=FALSE,range=0.0000001,
col=c('red','green','gray'),names=nameRegions(regionsFeatures),main=nameFeatures(regionsFeatures)[idFeature])
points(1:3,means)
}
regionsFeatures
regionsFeatures=regionsFeatures[c(1,3,4),idFeatures_select]
idFeatures_select=c("Dis_Telo","Dis_Cent","Rep_Timing","Average_Recom_Rate","Telomere_Hexamer")
regionsFeatures=regionsFeatures[c(1,3,4),idFeatures_select]
regionsFeatures=regionsFeatures[c(0,1,3),idFeatures_select]
regionsFeatures=regionsFeatures[c(1,2,3),idFeatures_select]
regionsFeatures
regionsFeatures=regionsFeatures[c(1,2,3,4),idFeatures_select]
regionsFeatures=regionsFeatures[c(0,1,2,3),idFeatures_select]
load('L1_low_resolution_autosomes.RData')
idFeatures_select=c("Dis_Telo","Dis_Cent","Rep_Timing","Average_Recom_Rate","Telomere_Hexamer")
regionsFeatures=regionsFeatures[c(1,3,4),idFeatures_select]
regionsFeatures
regionsFeatures@features=lapply(regionsFeatures@features,function(feat) lapply(feat,function(fe) t(fe)))
for(idFeature in idFeatures(regionsFeatures)){
means=unlist(lapply(features(regionsFeatures)[[idFeature]],mean,na.rm=TRUE))
boxplot(features(regionsFeatures)[[idFeature]],outline=FALSE,range=0.0000001,
col=c('red','green','gray'),names=nameRegions(regionsFeatures),main=nameFeatures(regionsFeatures)[idFeature])
points(1:3,means)
}
pdf('boxplot_low_resolution_noPol.pdf',width=10,height=7)
for(idFeature in idFeatures(regionsFeatures)){
means=unlist(lapply(features(regionsFeatures)[[idFeature]],mean,na.rm=TRUE))
boxplot(features(regionsFeatures)[[idFeature]],outline=FALSE,range=0.0000001,
col=c('red','green','gray'),names=nameRegions(regionsFeatures),main=nameFeatures(regionsFeatures)[idFeature])
points(1:3,means)
}
dev.off()
getwd()
setwd('/Users/Bruce/Desktop/L1/IWT/cleanControl_pvalues/median/')
load('L1_autosomes_results_smoothed_mean_alldennovo_median.RData')
plotSummary(result_mean,groupby="test",only_significant=FALSE,xlab='kb',
filenames=paste0("IWT_autosomes_smoothed_mean_summary_test_",c("denovo_control","pol_control","hs_control","denovo_pol","denovo_hs","pol_hs"),".pdf"),
align_lab="Integration site",ask=FALSE,cellwidth=10,cellheight=15)
plotSummary(result_mean,groupby="test",only_significant=FALSE,xlab='kb',
filenames=paste0("IWT_autosomes_smoothed_mean_summary_test_",c("denovo_control","pol_control","hs_control","denovo_pol","denovo_hs","pol_hs"),".pdf"),
align_lab="Integration site",ask=FALSE,cellwidth=10,cellheight=15)
setwd('Reorder_Final_L1Paper_Sept2019/')
plotSummary(result_mean,groupby="test",only_significant=FALSE,xlab='kb',
filenames=paste0("IWT_autosomes_smoothed_mean_summary_test_",c("denovo_control","pol_control","hs_control","denovo_pol","denovo_hs","pol_hs"),".pdf"),
align_lab="Integration site",ask=FALSE,cellwidth=10,cellheight=15)
# test1
test=1
result_mean1=result_mean
result_mean1@test$input$id_region1=result_mean1@test$input$id_region1[test]
result_mean1@test$input$id_region2=result_mean1@test$input$id_region2[test]
result_mean1@test$result=result_mean1@test$result[test]
##To covert the adjusted pvalue matrix so that everything above 0.05 will be converted to 1, and
##the heatmap becomes 2-colored
result_mean1@test$result[[1]]=lapply(result_mean1@test$result[[1]],
function(feat){
feat$adjusted_pval_matrix=(feat$adjusted_pval_matrix-1)*(feat$adjusted_pval_matrix<=0.05)+1
return(feat)
})
validObject(result_mean1)
##Change scales one by one for the 45 features and copy it to ~line 280
scale_threshold=c(100,100,10,4,100,
16,16,100,4,100,
8,100,4,4,10,
100,6,100,100,100,
100,4,100,10,10,
2,100,100,100,100,
6,100,100,20,100,
20,2,8,100,8,
100,100,100,100,10)
pdf('IWT_autosomes_smoothed_mean_scaled1.pdf',width=7,height=10)
plotTest(result_mean1,col=c('red','blue','green','black'),
scale_threshold=scale_threshold,ask=FALSE)
dev.off()
####### Scale selection updated Feb28, 2018
##################################
scale_threshold=list(test1=c(100,100,10,4,100,
16,16,100,4,100,
8,100,4,4,10,
100,6,100,100,100,
100,4,100,10,10,
2,100,100,100,100,
6,100,100,20,100,
20,2,8,100,8,
100,100,100,100,10),
test2=c(10,100,100,100,100,
100,100,100,100,100,
8,100,100,100,100,
100,8,12,4,4,
100,100,100,100,100,
100,2,100,100,100,
100,4,4,6,100,
2,100,4,6,100,
100,100,2,100,100),
test3=c(10,100,100,100,100,
100,100,100,100,100,
100,100,100,100,100,
100,8,100,6,100,
100,100,100,100,100,
100,6,100,100,100,
100,10,100,100,100,
2,100,10,100,100,
100,100,6,100,100),
test4=c(100,100,100,100,100,
100,100,100,100,4,
8,100,100,100,100,
100,100,100,100,2,
100,100,100,100,100,
100,100,100,100,6,
100,100,100,100,100,
100,100,6,6,100,
8,100,100,100,6),
test5=c(6,100,100,100,100,
100,100,100,100,4,
8,100,100,100,100,
100,4,8,44,6,
100,100,100,100,100,
100,100,100,100,6,
100,100,100,100,100,
10,100,4,100,100,
100,100,100,100,2),
test6=c(24,8,30,4,100,
8,8,10,8,2,
10,2,10,2,100,
100,2,6,6,100,
2,2,100,100,100,
100,100,100,6,6,
100,100,100,6,8,
4,20,4,10,16,
100,100,100,100,100)
)
plotSummary(result_mean,groupby="test",only_significant=FALSE,xlab='kb',scale_threshold=scale_threshold,
filenames=paste0("IWT_autosomes_smoothed_mean_summary_test_",c("denovo_control","pol_control","hs_control","denovo_pol","denovo_hs","pol_hs"),"_scaled.pdf"),
align_lab="Integration site",ask=FALSE,cellwidth=10,cellheight=15)
plotSummary(result_mean,groupby="test",only_significant=FALSE,xlab='kb',scale_threshold=scale_threshold,
filenames=paste0("IWT_autosomes_smoothed_mean_summary_test_",c("denovo_control","pol_control","hs_control","denovo_pol","denovo_hs","pol_hs"),"_scaled.pdf"),
align_lab="Integration site",ask=FALSE,cellwidth=10,cellheight=15)
plotSummary()
??plotSummary
plotSummary(id_features_subset)
idFeaturesTest(regionsFeatures)
load('L1_autosomes_results_smoothed_mean_alldennovo_median.RData')
setwd('/Users/Bruce/Desktop/L1/IWT/cleanControl_pvalues/median/')
load('L1_autosomes_results_smoothed_mean_alldennovo_median.RData')
regionsFeatures
setwd('/Users/Bruce/Desktop/L1/IWT/cleanControl_pvalues/median/')
load('L1_autosomes_results_smoothed_mean_alldennovo_median.RData')
result_mean@features
idFeaturesTest(regionsFeatures)
idFeaturesTest(result_mean)
write(result_mean, file='feature_order_original.txt')
write(as.vector(result_mean), file='feature_order_original.txt')
as.vector(idFeaturesTest(result_mean))
test<-as.vector(idFeaturesTest(result_mean))
# Plot the heatmap
plotSummary(result_mean,groupby="test",only_significant=FALSE,xlab='kb',scale_threshold=scale_threshold,
filenames=paste0("IWT_autosomes_smoothed_mean_summary_test_",c("denovo_control","pol_control","hs_control","denovo_pol","denovo_hs","pol_hs"),"_scaled.pdf"),
align_lab="Integration site",ask=FALSE,cellwidth=10,cellheight=15)
write(test, file='feature_order_original.txt')
setwd('Reorder_Final_L1Paper_Sept2019/')
## Check list/order of features
idFeaturesTest(result_mean)
test<-as.vector(idFeaturesTest(result_mean))
class(idFeaturesTest(result_mean))
as.character(test)
test
test<-as.vector(idFeaturesTest(result_mean))
test
class(test)
write(test, file='feature_order_original.txt')
reordered<-read.table("feature_order_original.txt")
reorder
reordered
class(reordered)
reordered <- as.character(reordered)
class(reordered)
plotSummary(result_mean,groupby="test",only_significant=FALSE,xlab='kb',scale_threshold=scale_threshold,
# change order of features based on Table 1 ##
id_features_subset= reordered,
filenames=paste0("IWT_autosomes_smoothed_mean_summary_test_",c("denovo_control","pol_control","hs_control","denovo_pol","denovo_hs","pol_hs"),"_scaled.pdf"),
align_lab="Integration site",ask=FALSE,cellwidth=10,cellheight=15)
idFeaturesTest(result_mean)
reordered
reordered
reordered<-read.table("feature_order_original.txt")
class(reordered)
reordered
reordered <- as.character(reordered)
reordered
reordered<-read.table("feature_order_original.txt")
class(reordered)
reordered<-read.table("feature_order_original.txt", quote = "\"")
class(reordered)
reordered
as.character(reordered)
reordered<-read.table("feature_order_original.txt", stringsAsFactors=FALSE)
class(reordered)
reordered
reordered<-read.table("feature_order_original.txt", stringsAsFactors=FALSE)
class(reordered)
reordered
idFeaturesTest(result_mean)
idFeaturesTest(result_mean) <- reordered
idFeaturesTest(result_mean)
idFeaturesTest(result_mean)=reordered
reordered
# Plot the heatmap
plotSummary(result_mean,groupby="test",only_significant=FALSE,xlab='kb',scale_threshold=scale_threshold,
# change order of features based on Table 1 ##
#id_features_subset= idFeaturesTest(result_mean),
id_features_subset=c("chh_meth","chg_meth")
##
filenames=paste0("IWT_autosomes_smoothed_mean_summary_test_",c("denovo_control","pol_control","hs_control","denovo_pol","denovo_hs","pol_hs"),"_scaled.pdf"),
align_lab="Integration site",ask=FALSE,cellwidth=10,cellheight=15)
# Plot the heatmap
plotSummary(result_mean,groupby="test",only_significant=FALSE,xlab='kb',scale_threshold=scale_threshold,
# change order of features based on Table 1 ##
#id_features_subset= idFeaturesTest(result_mean),
id_features_subset=c("chh_meth","chg_meth"),
##
filenames=paste0("IWT_autosomes_smoothed_mean_summary_test_",c("denovo_control","pol_control","hs_control","denovo_pol","denovo_hs","pol_hs"),"_scaled.pdf"),
align_lab="Integration site",ask=FALSE,cellwidth=10,cellheight=15)
scale_threshold=list(test1=c(100,100,10,4,100,
16,16,100,4,100,
8,100,4,4,10,
100,6,100,100,100,
100,4,100,10,10,
2,100,100,100,100,
6,100,100,20,100,
20,2,8,100,8,
100,100,100,100,10),
test2=c(10,100,100,100,100,
100,100,100,100,100,
8,100,100,100,100,
100,8,12,4,4,
100,100,100,100,100,
100,2,100,100,100,
100,4,4,6,100,
2,100,4,6,100,
100,100,2,100,100),
test3=c(10,100,100,100,100,
100,100,100,100,100,
100,100,100,100,100,
100,8,100,6,100,
100,100,100,100,100,
100,6,100,100,100,
100,10,100,100,100,
2,100,10,100,100,
100,100,6,100,100),
test4=c(100,100,100,100,100,
100,100,100,100,4,
8,100,100,100,100,
100,100,100,100,2,
100,100,100,100,100,
100,100,100,100,6,
100,100,100,100,100,
100,100,6,6,100,
8,100,100,100,6),
test5=c(6,100,100,100,100,
100,100,100,100,4,
8,100,100,100,100,
100,4,8,44,6,
100,100,100,100,100,
100,100,100,100,6,
100,100,100,100,100,
10,100,4,100,100,
100,100,100,100,2),
test6=c(24,8,30,4,100,
8,8,10,8,2,
10,2,10,2,100,
100,2,6,6,100,
2,2,100,100,100,
100,100,100,6,6,
100,100,100,6,8,
4,20,4,10,16,
100,100,100,100,100)
)
# Plot the heatmap
plotSummary(result_mean,groupby="test",only_significant=FALSE,xlab='kb',scale_threshold=scale_threshold,
# change order of features based on Table 1 ##
#id_features_subset= idFeaturesTest(result_mean),
id_features_subset=c("chh_meth","chg_meth"),
##
filenames=paste0("IWT_autosomes_smoothed_mean_summary_test_",c("denovo_control","pol_control","hs_control","denovo_pol","denovo_hs","pol_hs"),"_scaled.pdf"),
align_lab="Integration site",ask=FALSE,cellwidth=10,cellheight=15)
idFeaturesTest(result_mean)
class(idFeaturesTest(result_mean))
write(idFeaturesTest(result_mean), file='feature_order_original.txt')
reordered<-read.table("feature_order_original.txt", stringsAsFactors=FALSE)
class(reordered)
reordered<-as.character(reordered$V1)
reordered
idFeaturesTest(result_mean)<-reordered
idFeaturesTest(result_mean)=reordered
features_reordered<-read.table("feature_order_original.txt", stringsAsFactors=FALSE)
class(features_reordered)
reordered<-as.character(features_reordered$V1)
features_reordered<-as.character(features_reordered$V1)
features_reordered
idFeaturesTest(result_mean)
class(idFeaturesTest(result_mean))
write(idFeaturesTest(result_mean), file='feature_order_original.txt')
## Change order manually in feature_order_original.txt based on Table 1 and read back in
features_reordered<-read.table("feature_order_final.txt", stringsAsFactors=FALSE)
class(features_reordered)
features_reordered<-as.character(features_reordered$V1)
features_reordered
plotSummary(result_mean,groupby="test",only_significant=FALSE,xlab='kb',scale_threshold=scale_threshold,
# change order of features based on Table 1 ##
id_features_subset=features_reordered,
##
filenames=paste0("IWT_autosomes_smoothed_mean_summary_test_",c("denovo_control","pol_control","hs_control","denovo_pol","denovo_hs","pol_hs"),"_scaled.pdf"),
align_lab="Integration site",ask=FALSE,cellwidth=10,cellheight=15)
nTests(regionsFeatures)
nTests(result_mean)
result_mean@test$result
result_mean@test$input$id_region1
result_mean@test$input$id_region2
result_mean@test$input$id_region1
result_mean@test$input$id_region2
result_mean@test$input$id_region1=c("L1denovo","L1Pol","L1HS","L1denovo","L1denovo","L1Pol")
result_mean@test$input$id_region1=c("L1denovo","L1Pol","L1HS","L1Pol","L1HS","L1HS")
result_mean@test$input$id_region2=c("Control","Control","Control","L1denovo","L1denovo","L1Pol")
result_mean@test$input$id_region1=c("L1denovo","L1Pol","L1HS","L1Pol","L1HS","L1HS")
result_mean@test$input$id_region2=c("Control","Control","Control","L1denovo","L1denovo","L1Pol")
plotSummary(result_mean,groupby="test",only_significant=FALSE,xlab='kb',scale_threshold=scale_threshold,
# change order of features based on Table 1 ##
id_features_subset=features_reordered,
##
filenames=paste0("IWT_autosomes_smoothed_mean_summary_test_",c("denovo_control","pol_control","hs_control","pol_denovo","hs_denovo","hs_pol"),"_scaled.pdf"),
align_lab="Integration site",ask=FALSE,cellwidth=10,cellheight=15)
## Change direction of the tests
result_mean@test$input$id_region1=c("L1denovo","L1Pol","L1HS","L1Pol","L1HS","L1HS")
result_mean@test$input$id_region2=c("Control","Control","Control","L1denovo","L1denovo","L1Pol")
#Change sign of the test result when swapping the comparison direction
#result_mean@test$result[[i]][[j]]$T0_plot, i=1:6,j=1:45
for (i in 1:45){
result_mean@test$result[[4]][[i]]$T0_plot=-result_mean@test$result[[4]][[i]]$T0_plot
result_mean@test$result[[5]][[i]]$T0_plot=-result_mean@test$result[[5]][[i]]$T0_plot
result_mean@test$result[[6]][[i]]$T0_plot=-result_mean@test$result[[6]][[i]]$T0_plot
}
plotSummary(result_mean,groupby="test",only_significant=FALSE,xlab='kb',scale_threshold=scale_threshold,
# change order of features based on Table 1 ##
id_features_subset=features_reordered,
##
filenames=paste0("IWT_autosomes_smoothed_mean_summary_test_",c("denovo_control","pol_control","hs_control","pol_denovo","hs_denovo","hs_pol"),"_scaled.pdf"),
align_lab="Integration site",ask=FALSE,cellwidth=10,cellheight=15)
